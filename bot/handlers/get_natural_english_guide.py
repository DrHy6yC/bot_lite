from aiogram import F, Router
from aiogram.enums import ChatMemberStatus
from aiogram.exceptions import TelegramBadRequest
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery, InlineKeyboardMarkup

from bot.config import SETTINGS
from bot.create_bot import bot
from bot.keyboard import age_key, aim_key, tutor_key, signup_key, start_questionnaire_key, start_alert_key
from bot.state.state import LidFSM


router = Router(name="get_natural_english_guide")


@router.callback_query(F.data == "start_questionnaire")
async def start_questionnaire(callback: CallbackQuery, state: FSMContext):
    chat_member = await bot.get_chat_member(
        chat_id=callback.from_user.id,
        user_id=bot.id
    )
    is_bot_chat_exists = chat_member.status != ChatMemberStatus.LEFT
    print(is_bot_chat_exists)
    if is_bot_chat_exists:
        await bot.send_message(
            chat_id=callback.from_user.id,
            text=f"–ü—Ä–∏–≤–µ—Ç, {callback.from_user.first_name}!\n"
                 f"–Ø –∑–∞–¥–∞–º –≤–∞–º —Ç—Ä–∏ –≤–æ–ø—Ä–æ—Å–∞, –æ—Ç–≤–µ—Ç–∏–≤ –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ, –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –ø–∞–º—è—Ç–∫—É\n"
                 f"'–ö–∞–∫ –∑–≤—É—á–∞—Ç—å –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ: —Ñ—Ä–∞–∑—ã, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –Ω–µ –Ω–∞–π–¥–µ—Ç–µ –≤ —É—á–µ–±–Ω–∏–∫–∞—Ö'",
            reply_markup=start_questionnaire_key,
        )
        await state.set_state(LidFSM.age)
    else:
        await callback.answer(
            text = "–°–Ω–∞—á–∞–ª–∞ –Ω–∞–ø–∏—à–∏ –±–æ—Ç—É",
            show_alert = True
        )
        await callback.message.answer(
            "–ü–µ—Ä–µ–π—Ç–∏ –≤ –±–æ—Ç–∞?",
            reply_markup=start_alert_key
        )
    await callback.message.delete()


@router.callback_query(F.data == "get_guide")
@router.callback_query(LidFSM.age)
async def process_age(callback: CallbackQuery, state: FSMContext) -> None:
    await state.set_state(LidFSM.age)
    await callback.answer()
    await callback.message.delete()
    await bot.send_message(
        chat_id=callback.from_user.id,
        text="–°–∫–æ–ª—å–∫–æ –≤–∞–º –ª–µ—Ç?",
        reply_markup=age_key,
    )
    await state.set_state(LidFSM.aim)


@router.callback_query(LidFSM.aim)
async def process_aim(callback: CallbackQuery, state: FSMContext) -> None:
    await state.update_data(age=callback.data)
    await callback.answer()
    await callback.message.delete()
    await bot.send_message(
        chat_id=callback.from_user.id,
        text="–° –∫–∞–∫–æ–π —Ü–µ–ª—å—é –∏–∑—É—á–∞–µ—Ç–µ/—Ö–æ—Ç–∏—Ç–µ –∏–∑—É—á–∞—Ç—å –∞–Ω–≥–ª–∏–π—Å–∫–∏–π?",
        reply_markup=aim_key
    )
    await state.set_state(LidFSM.tutor)


@router.callback_query(LidFSM.tutor)
async def process_tutor(callback: CallbackQuery, state: FSMContext) -> None:
    await state.update_data(aim=callback.data)
    await callback.answer()
    await callback.message.delete()
    await bot.send_message(
        chat_id=callback.from_user.id,
        text="–†–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç–µ –ª–∏ –≤—ã –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–Ω—è—Ç–∏–π —Å —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–æ–º?",
        reply_markup=tutor_key,
    )
    await state.set_state(LidFSM.end)


@router.callback_query(LidFSM.end)
async def process_gender(callback: CallbackQuery, state: FSMContext) -> None:
    button_signup: InlineKeyboardMarkup | None = signup_key if callback.data == "–ù–µ—Ç" else None
    await state.update_data(tutor=callback.data)
    data = await state.get_data()
    await callback.answer()
    await callback.message.delete()
    await bot.send_message(
        chat_id=callback.from_user.id,
        text="–ë–ª–∞–≥–æ–¥–∞—Ä—é –∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é\n"
             "–°–∫–∞—á–∞—Ç—å –º–æ–∂–Ω–æ –∑–¥–µ—Å—åüëá\n"
             "https://disk.yandex.ru/i/aTw9iwnuUw_iHA",
        reply_markup=button_signup
    )
    try:
        await bot.send_message(
            chat_id=SETTINGS.ID_INFO_CHAT,
            text=f"–ò–º—è: {callback.from_user.full_name},\n"
                 f"–õ–æ–≥–∏–Ω: {callback.from_user.username},\n"
                 f"–í–æ–∑—Ä–∞—Å—Ç: {data['age']},\n"
                 f"–¶–µ–ª—å: {data['aim']},\n"
                 f"–ó–∞–Ω–∏–º–∞–µ—Ç—Å—è –ª–∏ —Å —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–æ–º: {data['tutor']}",
        )
    except TelegramBadRequest:
        print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{callback.from_user.username} –Ω–µ –ø–∏—Å–∞–ª –±–æ—Ç—É")
    await state.clear()

